vector<TreeNode*> FindCnode(vector<TreeNode*> childnode)
	{
		vector<TreeNode*> result;
		for (int i = 0; i < childnode.size(); i++)
		{
			if (childnode[i]->left != NULL)
			{
				result.push_back(childnode[i]->left);
			}
			if (childnode[i]->right != NULL)
			{
				result.push_back(childnode[i]->right);
			}
		}
		return result;
	}
	vector<double> averageOfLevels(TreeNode* root) {
		vector<double> result;
		vector<TreeNode*> childnode;
		childnode.push_back(root);
		while (childnode.size()!=0)
		{
			double sum = 0.0;
			for (int i=0;i<childnode.size();i++)
			{
				sum += childnode[i]->val;
			}
			result.push_back(sum*1.0 / childnode.size());
			childnode = FindCnode(childnode);
		}
		return result;
	}